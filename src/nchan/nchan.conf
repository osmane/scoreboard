server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # Publisher endpoint table
    location ~ ^/publish/table/(?<channel>\w+)$ {
        nchan_publisher;
        nchan_channel_id $channel; # Extract channel name from the path

        # Configure message buffering for publishers
        nchan_message_buffer_length 1000;
    }

    # Publisher endpoint lobby
    location ~ ^/publish/lobby/(?<channel>\w+)$ {
        nchan_publisher;
        nchan_channel_id $channel; # Extract channel name from the path

        # Configure message buffering for publishers
        nchan_message_buffer_length 0;
    }

    # Subscriber endpoint table
    location ~ ^/subscribe/table/(?<channel>\w+)$ {
        nchan_subscriber;
        nchan_channel_id $channel; # Extract channel name from the path

        # Send all messages from the beginning
        nchan_message_buffer_length 0;
        nchan_message_timeout 0;
        nchan_subscriber_first_message oldest;

        # Disable subscriber timeout
        nchan_subscriber_timeout 0;
    }

    # Subscriber endpoint lobby
    location ~ ^/subscribe/lobby/(?<channel>\w+)$ {
        nchan_subscriber;
        nchan_channel_id $channel; # Extract channel name from the path

        # Send only new live messages (disable history)
        nchan_message_buffer_length 0;
        nchan_message_timeout 0;

        # Disable subscriber timeout
        nchan_subscriber_timeout 0;
    }

    # Basic status monitoring
    location = /basic_status {
        stub_status;

                # Add CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type, Authorization";

        # Preflight request handling
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Extended stats
    location /nchan_stats {
        nchan_stub_status;
    }
}